/**
 * @fileoverview 
 * @suppress {duplicate}
 */

function require() {}

var module = {};
module.config = function() {}; // requirejs module configuration (see https://requirejs.org/docs/api.html#config-moduleconfig)
module.exports = {};
var exports = {};

function define() {}
define.amd = {};

var process = {};
process.execPath = {};
process.v8 = {};
process.node = {};
process.versions = {};
process.versions.node = {};
process.versions.v8 = {};
process.nextTick = function() {};

window.OpenAjax = {};
window.OpenAjax.hub = {};
window.OpenAjax.hub.registerLibrary = function() {};

// Lightstreamer client externs
var BufferAppender = function() {};
var ClientListener = function() {};
var ClientMessageListener = function() {};
var ConnectionDetails = function() {};
var ConnectionOptions = function() {};
var ConsoleAppender = function() {};
var FunctionAppender = function() {};
var FunctionLogConsumer = function() {};
var Globals = {};
var IllegalArgumentException = function() {};
var IllegalStateException = function() {};
var Inheritance = {};
var ItemUpdate = function() {};
var ItemUpdateChangedFieldCallback = function() {};
var LightstreamerClient = function() {};
var Logger = function() {};
var LoggerProvider = function() {};
var RemoteAppender = function() {};
var SimpleLogAppender = function() {};
var SimpleLogger = function() {};
var SimpleLoggerProvider = function() {};
var Subscription = function() {};
var SubscriptionListener = function() {};
BufferAppender.prototype.composeLine = function() {};
BufferAppender.prototype.extractLog = function() {};
BufferAppender.prototype.getCategoryFilter = function() {};
BufferAppender.prototype.getLength = function() {};
BufferAppender.prototype.getLevel = function() {};
BufferAppender.prototype.getLog = function() {};
BufferAppender.prototype.log = function() {};
BufferAppender.prototype.reset = function() {};
BufferAppender.prototype.setCategoryFilter = function() {};
BufferAppender.prototype.setLevel = function() {};
BufferAppender.prototype.setLoggerProvider = function() {};
ClientListener.prototype.onListenEnd = function() {};
ClientListener.prototype.onListenStart = function() {};
ClientListener.prototype.onPropertyChange = function() {};
ClientListener.prototype.onServerError = function() {};
ClientListener.prototype.onStatusChange = function() {};
ClientMessageListener.prototype.onAbort = function() {};
ClientMessageListener.prototype.onDeny = function() {};
ClientMessageListener.prototype.onDiscarded = function() {};
ClientMessageListener.prototype.onError = function() {};
ClientMessageListener.prototype.onProcessed = function() {};
ConnectionDetails.prototype.getAdapterSet = function() {};
ConnectionDetails.prototype.getServerAddress = function() {};
ConnectionDetails.prototype.getServerInstanceAddress = function() {};
ConnectionDetails.prototype.getServerSocketName = function() {};
ConnectionDetails.prototype.getSessionId = function() {};
ConnectionDetails.prototype.getUser = function() {};
ConnectionDetails.prototype.setAdapterSet = function() {};
ConnectionDetails.prototype.setPassword = function() {};
ConnectionDetails.prototype.setServerAddress = function() {};
ConnectionDetails.prototype.setUser = function() {};
ConnectionOptions.prototype.getConnectTimeout = function() {};
ConnectionOptions.prototype.getContentLength = function() {};
ConnectionOptions.prototype.getCurrentConnectTimeout = function() {};
ConnectionOptions.prototype.getFirstRetryMaxDelay = function() {};
ConnectionOptions.prototype.getForcedTransport = function() {};
ConnectionOptions.prototype.getHttpExtraHeaders = function() {};
ConnectionOptions.prototype.getIdleTimeout = function() {};
ConnectionOptions.prototype.getKeepaliveInterval = function() {};
ConnectionOptions.prototype.getMaxBandwidth = function() {};
ConnectionOptions.prototype.getPollingInterval = function() {};
ConnectionOptions.prototype.getReconnectTimeout = function() {};
ConnectionOptions.prototype.getRetryDelay = function() {};
ConnectionOptions.prototype.getReverseHeartbeatInterval = function() {};
ConnectionOptions.prototype.getSessionRecoveryTimeout = function() {};
ConnectionOptions.prototype.getStalledTimeout = function() {};
ConnectionOptions.prototype.isCookieHandlingRequired = function() {};
ConnectionOptions.prototype.isEarlyWSOpenEnabled = function() {};
ConnectionOptions.prototype.isHttpExtraHeadersOnSessionCreationOnly = function() {};
ConnectionOptions.prototype.isServerInstanceAddressIgnored = function() {};
ConnectionOptions.prototype.isSlowingEnabled = function() {};
ConnectionOptions.prototype.setConnectTimeout = function() {};
ConnectionOptions.prototype.setContentLength = function() {};
ConnectionOptions.prototype.setCookieHandlingRequired = function() {};
ConnectionOptions.prototype.setCurrentConnectTimeout = function() {};
ConnectionOptions.prototype.setEarlyWSOpenEnabled = function() {};
ConnectionOptions.prototype.setFirstRetryMaxDelay = function() {};
ConnectionOptions.prototype.setForcedTransport = function() {};
ConnectionOptions.prototype.setHttpExtraHeaders = function() {};
ConnectionOptions.prototype.setHttpExtraHeadersOnSessionCreationOnly = function() {};
ConnectionOptions.prototype.setIdleTimeout = function() {};
ConnectionOptions.prototype.setKeepaliveInterval = function() {};
ConnectionOptions.prototype.setMaxBandwidth = function() {};
ConnectionOptions.prototype.setPollingInterval = function() {};
ConnectionOptions.prototype.setReconnectTimeout = function() {};
ConnectionOptions.prototype.setRetryDelay = function() {};
ConnectionOptions.prototype.setReverseHeartbeatInterval = function() {};
ConnectionOptions.prototype.setServerInstanceAddressIgnored = function() {};
ConnectionOptions.prototype.setSessionRecoveryTimeout = function() {};
ConnectionOptions.prototype.setSlowingEnabled = function() {};
ConnectionOptions.prototype.setStalledTimeout = function() {};
ConsoleAppender.prototype.composeLine = function() {};
ConsoleAppender.prototype.getCategoryFilter = function() {};
ConsoleAppender.prototype.getLevel = function() {};
ConsoleAppender.prototype.log = function() {};
ConsoleAppender.prototype.setCategoryFilter = function() {};
ConsoleAppender.prototype.setLevel = function() {};
ConsoleAppender.prototype.setLoggerProvider = function() {};
FunctionAppender.prototype.composeLine = function() {};
FunctionAppender.prototype.getCategoryFilter = function() {};
FunctionAppender.prototype.getLevel = function() {};
FunctionAppender.prototype.log = function() {};
FunctionAppender.prototype.setCategoryFilter = function() {};
FunctionAppender.prototype.setLevel = function() {};
FunctionAppender.prototype.setLoggerProvider = function() {};
IllegalArgumentException.prototype.message = function() {};
IllegalArgumentException.prototype.name = function() {};
IllegalStateException.prototype.message = function() {};
IllegalStateException.prototype.name = function() {};
Inheritance._callSuperConstructor = function() {};
Inheritance._callSuperMethod = function() {};
Inheritance._super_ =  {};
ItemUpdate.prototype.forEachChangedField = function() {};
ItemUpdate.prototype.forEachField = function() {};
ItemUpdate.prototype.getItemName = function() {};
ItemUpdate.prototype.getItemPos = function() {};
ItemUpdate.prototype.getValue = function() {};
ItemUpdate.prototype.isSnapshot = function() {};
ItemUpdate.prototype.isValueChanged = function() {};
LightstreamerClient.addCookies = function() {};
LightstreamerClient.prototype.addListener = function() {};
LightstreamerClient.prototype.connect = function() {};
LightstreamerClient.prototype.connectionDetails = function() {};
LightstreamerClient.prototype.connectionOptions = function() {};
LightstreamerClient.prototype.disconnect = function() {};
LightstreamerClient.getCookies = function() {};
LightstreamerClient.prototype.getListeners = function() {};
LightstreamerClient.prototype.getStatus = function() {};
LightstreamerClient.prototype.getSubscriptions = function() {};
LightstreamerClient.LIB_NAME = function() {};
LightstreamerClient.LIB_VERSION = function() {};
LightstreamerClient.prototype.removeListener = function() {};
LightstreamerClient.prototype.sendMessage = function() {};
LightstreamerClient.setLoggerProvider = function() {};
LightstreamerClient.prototype.subscribe = function() {};
LightstreamerClient.prototype.unsubscribe = function() {};
Logger.prototype.debug = function() {};
Logger.prototype.error = function() {};
Logger.prototype.fatal = function() {};
Logger.prototype.info = function() {};
Logger.prototype.isDebugEnabled = function() {};
Logger.prototype.isErrorEnabled = function() {};
Logger.prototype.isFatalEnabled = function() {};
Logger.prototype.isInfoEnabled = function() {};
Logger.prototype.isWarnEnabled = function() {};
Logger.prototype.warn = function() {};
LoggerProvider.prototype.getLogger = function() {};
RemoteAppender.prototype.composeLine = function() {};
RemoteAppender.prototype.extractLog = function() {};
RemoteAppender.prototype.getCategoryFilter = function() {};
RemoteAppender.prototype.getLevel = function() {};
RemoteAppender.prototype.log = function() {};
RemoteAppender.prototype.setCategoryFilter = function() {};
RemoteAppender.prototype.setLevel = function() {};
RemoteAppender.prototype.setLoggerProvider = function() {};
SimpleLogAppender.prototype.composeLine = function() {};
SimpleLogAppender.prototype.getCategoryFilter = function() {};
SimpleLogAppender.prototype.getLevel = function() {};
SimpleLogAppender.prototype.log = function() {};
SimpleLogAppender.prototype.setCategoryFilter = function() {};
SimpleLogAppender.prototype.setLevel = function() {};
SimpleLogAppender.prototype.setLoggerProvider = function() {};
SimpleLogger.prototype.debug = function() {};
SimpleLogger.prototype.error = function() {};
SimpleLogger.prototype.fatal = function() {};
SimpleLogger.prototype.info = function() {};
SimpleLogger.prototype.isDebugEnabled = function() {};
SimpleLogger.prototype.isErrorEnabled = function() {};
SimpleLogger.prototype.isFatalEnabled = function() {};
SimpleLogger.prototype.isInfoEnabled = function() {};
SimpleLogger.prototype.isWarnEnabled = function() {};
SimpleLogger.prototype.setLevel = function() {};
SimpleLogger.prototype.warn = function() {};
SimpleLoggerProvider.prototype.addLoggerAppender = function() {};
SimpleLoggerProvider.prototype.dispatchLog = function() {};
SimpleLoggerProvider.prototype.getLogger = function() {};
SimpleLoggerProvider.prototype.removeLoggerAppender = function() {};
Subscription.prototype.addListener = function() {};
Subscription.prototype.getCommandPosition = function() {};
Subscription.prototype.getCommandSecondLevelDataAdapter = function() {};
Subscription.prototype.getCommandSecondLevelFields = function() {};
Subscription.prototype.getCommandSecondLevelFieldSchema = function() {};
Subscription.prototype.getCommandValue = function() {};
Subscription.prototype.getDataAdapter = function() {};
Subscription.prototype.getFields = function() {};
Subscription.prototype.getFieldSchema = function() {};
Subscription.prototype.getItemGroup = function() {};
Subscription.prototype.getItems = function() {};
Subscription.prototype.getKeyPosition = function() {};
Subscription.prototype.getListeners = function() {};
Subscription.prototype.getMode = function() {};
Subscription.prototype.getRequestedBufferSize = function() {};
Subscription.prototype.getRequestedMaxFrequency = function() {};
Subscription.prototype.getRequestedSnapshot = function() {};
Subscription.prototype.getSelector = function() {};
Subscription.prototype.getValue = function() {};
Subscription.prototype.isActive = function() {};
Subscription.prototype.isSubscribed = function() {};
Subscription.prototype.removeListener = function() {};
Subscription.prototype.setCommandSecondLevelDataAdapter = function() {};
Subscription.prototype.setCommandSecondLevelFields = function() {};
Subscription.prototype.setCommandSecondLevelFieldSchema = function() {};
Subscription.prototype.setDataAdapter = function() {};
Subscription.prototype.setFields = function() {};
Subscription.prototype.setFieldSchema = function() {};
Subscription.prototype.setItemGroup = function() {};
Subscription.prototype.setItems = function() {};
Subscription.prototype.setRequestedBufferSize = function() {};
Subscription.prototype.setRequestedMaxFrequency = function() {};
Subscription.prototype.setRequestedSnapshot = function() {};
Subscription.prototype.setSelector = function() {};
SubscriptionListener.prototype.onClearSnapshot = function() {};
SubscriptionListener.prototype.onCommandSecondLevelItemLostUpdates = function() {};
SubscriptionListener.prototype.onCommandSecondLevelSubscriptionError = function() {};
SubscriptionListener.prototype.onEndOfSnapshot = function() {};
SubscriptionListener.prototype.onItemLostUpdates = function() {};
SubscriptionListener.prototype.onItemUpdate = function() {};
SubscriptionListener.prototype.onListenEnd = function() {};
SubscriptionListener.prototype.onListenStart = function() {};
SubscriptionListener.prototype.onSubscription = function() {};
SubscriptionListener.prototype.onSubscriptionError = function() {};
SubscriptionListener.prototype.onUnsubscription = function() {};
